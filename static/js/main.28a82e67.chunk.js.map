{"version":3,"sources":["Component/Aboutme/Tarun.jpg","Component/Aboutme/Kaneki.jpg","Component/Aboutme/College.jpg","Component/Navig/Navig.js","Component/Tarun/Tarun.js","Component/Aboutme/HeadImg.js","Component/Aboutme/Content.js","Component/Aboutme/SectionList.js","Component/Aboutme/Hding.js","Component/Aboutme/Aboutme.js","Component/Skills/SCard.js","Component/Skills/SkillCards.js","Component/Skills/PCard.js","Component/Skills/ProjectList.js","Component/Skills/Skills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navig","openAboutMe","openTarun","openSP","class","onClick","Tarun","id","img","HeadImg","scn","College","Kaneki","src","alt","Content","content","sctn","SectionList","map","i","Hding","Aboutme","SCard","cardNo","head","href","cardsNo","SkillCard","className","PCard","target","ProjectList","Skills","SkillCards","App","setState","section","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28a82e67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tarun.52ef3872.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Kaneki.1b226960.jpg\";","module.exports = __webpack_public_path__ + \"static/media/College.f24577e8.jpg\";","import React from 'react';\r\nimport './Navig.css';\r\n\r\nconst Navig = ({ openAboutMe, openTarun, openSP }) => {\r\n\treturn (\r\n\t\t<nav class=\"nav_bar\">\r\n\t\t<p class=\"item top_item\" onClick= {openTarun}>tArun</p>\r\n\t\t<p class=\"item\" onClick= {openAboutMe}>About Me</p>\r\n\t\t<p class=\"item\" onClick= {openSP}>Skills & Projects</p>\r\n\t\t</nav>\r\n\t\t);\r\n}\r\n\r\nexport default Navig;","import React from 'react';\r\nimport './Tarun.css';\r\n\r\nconst Tarun = ({ openAboutMe }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t<div class=\"thepage\">\r\n\t\t<p id='myname'>t<span onClick = {openAboutMe}>A</span>run</p>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Tarun;","import React from 'react';\r\nimport './Aboutme.css';\r\nimport Tarun from './Tarun.jpg';\r\nimport './HeadImg.css';\r\nimport Kaneki from './Kaneki.jpg';\r\nimport College from './College.jpg';\r\n\r\nlet img= \"\";\r\n\r\nconst HeadImg = ({ scn }) => {\r\n\tif(scn === 1) {\r\n\t\timg = Tarun;\r\n\t}\r\n\tif(scn === 2) {\r\n\t\timg = College;\r\n\t}\r\n\tif(scn === 3) {\r\n\t\timg = Kaneki;\r\n\t}\r\n\treturn (\r\n\t\t<div class=\"amdiv\">\r\n\t\t\t<img class=\"image\" src={img} alt=\"can't load\"/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default HeadImg;","import React from 'react';\r\nimport './Aboutme.css';\r\n\r\n\r\nconst Content = ({ scn }) => {\r\n\tlet content = \"\";\r\n\tif (scn === 1) {\r\n\t\tcontent = (\r\n\t\t<div class=\"amdiv pd\">\r\n\t\t<p>Hi! I am Tarun Garg!<br /> Tarun is an optimistic individual who believes in giving his best for anything he likes.\r\n\t\tHe is co-operative and believes that altruism is the second nature of people.</p>\r\n\t\t</div>\r\n\t\t)\r\n\t\t}\r\n\tif (scn === 2) {\r\n\t\tcontent = (\r\n\t\t<div class=\"amdiv pd\">\r\n \t\t<p>Tarun is currently studying in Hansraj College.\r\n \t\tHis disciplines are Philosophy and History. \r\n \t\tHe likes to write poem, stories and code. \r\n \t\t</p>\r\n \t\t</div>\r\n \t\t)\r\n\t\t}\r\n\tif(scn === 3)  {\r\n\t\tcontent = (\r\n\t\t<div class=\"amdiv pd\">\r\n \t\t<p>Tarun likes to watch anime and play video games.\r\n \t\tHe also likes to dance but it pretty bad at it.\r\n \t\tThough that has never stopped him for doing it.</p>\r\n \t\t</div>\r\n \t\t)\r\n\t\t}\r\n\treturn (\r\n\t\tcontent\r\n\t\t)\r\n\t}\r\n\r\nexport default Content;","import React from  'react';\r\nimport HeadImg from './HeadImg';\r\nimport Content from './Content';\r\n\r\nconst sctn = [1, 2, 3]\r\n\r\nconst SectionList = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\tsctn.map((i) => {\r\n\t\t\treturn (\t\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<HeadImg scn= {i}/>\r\n\t\t\t\t\t<Content scn= {i}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t})}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SectionList;","import React from 'react';\r\nimport './Hding.css';\r\n\r\nconst Hding = () => {\r\n\treturn(\r\n\t\t<h1 class = \"hdab\">About Me</h1>\r\n\t\t)\r\n}\r\n\r\nexport default Hding;","import React from 'react';\r\nimport './Aboutme.css';\r\nimport SectionList from './SectionList';\r\nimport Hding from './Hding';\r\n\r\nconst Aboutme = () => {\r\n\treturn (\r\n\t\t<div class=\"amdiv\">\r\n\t\t\t<Hding />\r\n\t\t\t<SectionList />\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Aboutme;","import React from 'react';\r\nimport './SCard.css';\r\n\r\nconst SCard = ({ cardNo }) => {\r\n  let head = \"\";\r\n  switch(cardNo) {\r\n    case 1: head = (<h5> HTML5 </h5>);\r\n    break;\r\n    case 2: head = (<h5> CSS </h5>);\r\n    break;\r\n    case 3: head = (<h5> JavaScript </h5>);\r\n    break;\r\n    case 4: head = (<h5> React </h5>);\r\n    break;\r\n    case 5: head = (<h5> Node.js </h5>);\r\n    break;\r\n    case 6: head = (<h5> Express.js </h5>);\r\n    break;\r\n    case 7: head = (<h5> Postgres </h5>);\r\n    break;\r\n  }\r\n\r\n  return (\r\n      <div class=\"center\">\r\n        <div class=\"property-card\">\r\n          <a href=\"#\">\r\n            <div class={`property-image sc${cardNo}`}>\r\n            </div></a>\r\n          <div class=\"property-description\">\r\n            {head}\r\n          </div>\r\n          <a href=\"#\">\r\n            <div class=\"property-social-icons\">\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n);\r\n}\r\n\r\nexport default SCard;","import React from 'react';\r\nimport SCard from './SCard';\r\nimport './Gridset.css';\r\n\r\nconst cardsNo = [1, 2, 3, 4, 5 , 6, 7];\r\n\r\nconst SkillCard = () => {\r\n\treturn (\r\n\t\t<div className =\"gridsc\">\r\n\t\t{\r\n\t\tcardsNo.map((i) => {\r\n\t\t\treturn (\t\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<SCard cardNo={i}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t})}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default SkillCard;","import React from 'react';\r\nimport './PCard.css';\r\n\r\nconst PCard = ({ cardNo }) => {\r\n  // let head = \"\";\r\n  // switch(cardNo) {\r\n  //   case 1: \r\n  // }\r\n\r\n  return (\r\n      <div class=\"card\">\r\n          <div class=\"front\">\r\n            <p>Face Detection <br />-projectbrain</p>\r\n          </div>\r\n          <div class=\"back\">\r\n            <div>\r\n              <p>Face Detection App</p>\r\n              <p>The app is built using Node.js with React and Express.\r\n              It uses Prostges SQL as server and detects face using Face Detection APi.</p>\r\n              <button class=\"button\"><a href=\"https://gtarun14111.github.io/projectbrain/\" target=\"_blank\">View App!</a></button>\r\n            </div>\r\n          </div>\r\n      </div>\r\n);\r\n}\r\n\r\nexport default PCard;","import React from 'react';\r\nimport PCard from './PCard';\r\nimport './Gridset.css';\r\n\r\nconst cardsNo = [1];\r\n\r\nconst ProjectList = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\tcardsNo.map((i) => {\r\n\t\t\treturn (\t\r\n\t\t\t\t<div> \r\n\t\t\t\t\t<PCard cardNo={i}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t})}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport SkillCards from './SkillCards';\r\nimport ProjectList from './ProjectList';\r\n\r\nconst Skills = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<h1> Skills </h1>\r\n\t\t\t\t<SkillCards />\r\n\t\t\t\t<h1> Projects </h1>\r\n\t\t\t\t<ProjectList />\t\t\r\n\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Skills;","import React, { Component } from 'react';\nimport './App.css';\nimport Navig from './Component/Navig/Navig';\nimport Tarun from './Component/Tarun/Tarun';\nimport Aboutme from './Component/Aboutme/Aboutme';\nimport Skills from './Component/Skills/Skills';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tsection: 'tarun'\n\t\t}\n\t}\n\n\topenAboutMe = () => {\n\t\tthis.setState( {section: \"aboutMe\"});\n\t}\n\n\topenTarun = () => {\n\t\tthis.setState( {section: \"tarun\"});\n\t}\n\n\topenSP = () => {\n\t\tthis.setState( {section: \"sp\"});\n\t}\n\n  render() {\n  return (\n    <div>\n    <Navig openAboutMe = {this.openAboutMe} openTarun = {this.openTarun} openSP = {this.openSP}/>\n    {\n    \tthis.state.section === 'tarun'\n    \t?    <Tarun openAboutMe = {this.openAboutMe} />\n\t    :    \n\t    ( this.state.section === 'aboutMe'\n\t\t    ?    <Aboutme />\n\t\t    :    <Skills />\n    )\n}\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}